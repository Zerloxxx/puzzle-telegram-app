from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from dotenv import load_dotenv
import os

load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))
dp = Dispatcher(bot)

# üí¨ –ö–Ω–æ–ø–∫–∞ Web App
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(KeyboardButton(
    text="üß© –ò–≥—Ä–∞—Ç—å –≤ –ø–∞–∑–ª",
    web_app=WebAppInfo(url="https://zerloxxx.github.io/puzzle-telegram-app/?v=999")
))

# üîÅ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ —Å—ã–≥—Ä–∞—Ç—å –≤ –ø–∞–∑–ª? –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá", reply_markup=main_kb)

# üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–¥)
@dp.message_handler(content_types=['web_app_data'])
async def handle_webapp_data(message: types.Message):
    code = message.web_app_data.data
    await message.answer(f"üéâ –¢—ã –ø—Ä–æ—à—ë–ª –∏–≥—Ä—É –∏ –ø–æ–ª—É—á–∏–ª –∫–æ–¥: {code}")

# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)

